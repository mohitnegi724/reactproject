{"version":3,"sources":["Components/Placeholders/PostsPlaceholder.js","Components/Posts.js","Actions/Actions.js","Actions/Types.js","Components/Placeholders/PostPlaceholder.js","Components/Post.js","Components/Header.js","Components/AddPlace.js","Components/NotFound.js","App.js","Reducer/rootReducer.js","serviceWorker.js","index.js"],"names":["PostsPlaceholder","react_default","a","createElement","className","Posts","this","props","Object","keys","length","Helmet","charSet","Placeholders_PostsPlaceholder","map","post","_id","alias","title","image","imgPictureCredit","source","articleBody","key","src","alt","react_router_dom","to","dispatchPosts","Component","mapDispatchToProps","dispatch","axios","get","then","db","type","data","catch","err","console","log","connect","state","PostPlaceholder","Fragment","Post","_this","deleteIndividualPost","_this$props$Post","publishDate","Alias","match","params","id","onClick","history","goBack","Date","Number","toLocaleDateString","push","Placeholders_PostPlaceholder","dispatchPost","unmountPost","status","response","postId","Header","AddPlace","char","method","action","name","placeholder","required","value","NotFound","frameBorder","App","Components_Header","react_router","exact","path","component","Notfound","DEFAULT_STATE","rootReducer","arguments","undefined","objectSpread","Boolean","window","location","hostname","store","createStore","applyMiddleware","Thunk","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.73afecb0.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../../Styles/PostsPlaceholder.css';\r\n\r\nconst PostsPlaceholder =()=>{\r\n    return(\r\n        <div>\r\n            <div className=\"placeholderContainer\">\r\n                <div className=\"placeholderImage\">\r\n                    </div>\r\n                    <div className=\"floatLeft\">\r\n                    <div className=\"placeholderTitle\">\r\n                    </div>\r\n                    <div className=\"placeholderDescription\">\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostsPlaceholder;","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\nimport {fetchPostsFromServer} from '../Actions/Actions';\r\nimport PostsPlaceholder from './Placeholders/PostsPlaceholder';\r\nimport {Helmet} from 'react-helmet';\r\nimport '../App.css';\r\nimport '../Styles/Post.css';\r\n\r\nclass Posts extends Component { \r\n  render() {\r\n    const {Posts} = this.props;\r\n    const showPosts=()=>{\r\n        return Posts.map(post=>{\r\n            const {_id, alias,title,image, imgPictureCredit, source,articleBody} = post;\r\n            return(\r\n                    <div key={_id} className=\"articleBody\">\r\n                        <div className=\"ImageInfo\">\r\n                            <img src={image} alt={title} className=\"articleImage\"/>\r\n                            {imgPictureCredit ?<p className=\"pictureCredits\">{imgPictureCredit}</p> :null}\r\n                        </div>\r\n                        <Link to={\"/article/\"+alias} key={_id}>\r\n                        <div className=\"articleDesc\">\r\n                            <h3 className=\"articleTitle\">{title}</h3>\r\n                            <p >{articleBody}</p>\r\n                            <p>Source :{source}</p>\r\n                        </div>\r\n                        </Link>\r\n                    </div>\r\n            )\r\n        });\r\n    };\r\n    return (\r\n      <div>\r\n        {Object.keys(this.props.Posts).length>0?<div>\r\n            <Helmet>\r\n              <meta charSet=\"utf-8\"/>\r\n                <title>\r\n                    MERN Project | mohitnegi.me\r\n                </title>\r\n          </Helmet>\r\n        </div>:<PostsPlaceholder/>}\r\n        {showPosts()}\r\n      </div>\r\n    )\r\n  }\r\n  componentDidMount(){\r\n      this.props.dispatchPosts();\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps=state=>{\r\n    return {\r\n        Posts:state.Posts\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps={\r\n    dispatchPosts:fetchPostsFromServer\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Posts);","import axios from 'axios';\r\nimport {FETCH_POSTS,FETCH_POST,DELETE_POST,POST_UNMOUNT,NO_POST_FOUND} from './Types';\r\nexport const fetchPostsFromServer=()=>dispatch=>{\r\n    axios.get(\"/articles\")\r\n    .then(db=>{\r\n        return dispatch({type:FETCH_POSTS, Posts:db.data});\r\n    })\r\n    .catch(err=>console.log(err));\r\n};\r\n\r\nexport const fetchPostFromServer=id=>dispatch=>{\r\n    const postId = axios.get(\"/article/\"+id)\r\n    postId.then(db =>dispatch({type: FETCH_POST,Post: db.data, status:db.status}))\r\n    .catch(err =>{\r\n        return dispatch({type: NO_POST_FOUND, Post:{status:err.response.status}})\r\n    })\r\n}\r\n\r\nexport const deletePost=alias=>dispatch=>{\r\n    axios.post(\"/delete/\"+alias)\r\n    .then(()=>{\r\n        return dispatch({\r\n            type:DELETE_POST,\r\n            postId:alias\r\n        });\r\n    })\r\n    .catch(err => console.log(err));\r\n};\r\n\r\n\r\nexport const unmountPost=()=>dispatch=>{\r\n    return dispatch({\r\n        type:POST_UNMOUNT,\r\n        Post:{}\r\n    });\r\n};","export const FETCH_POSTS = \"FETCH_POSTS\";\r\nexport const FETCH_POST = \"FETCH_POST\";\r\nexport const DELETE_POST = \"DELETE_POST\";\r\nexport const POST_UNMOUNT = \"POST_UNMOUNT\";\r\nexport const NO_POST_FOUND = \"NO_POST_FOUND\"\r\n","import React, {Component} from 'react';\r\nimport '../../Styles/PostPlaceholder.css';\r\n\r\n\r\nclass PostPlaceholder extends Component {\r\n    render() {\r\n        return(\r\n            <React.Fragment>\r\n                <div className=\"postPlaceholderContainer\">\r\n                    <div className=\"postPlaceholderTitle\">\r\n                    </div>\r\n                    <div className=\"postPlaceholderImage\">\r\n                    </div>\r\n                    <div className=\"info\">\r\n                        <div className=\"postPlaceholderDescription\">\r\n                            <div className=\"postPlaceholderDate\">\r\n                            </div>\r\n                            <div className=\"postPlaceholderDetails\">\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n    componentDidMount(){\r\n        console.log(\"Placeholder updated\");\r\n        \r\n    }\r\n}\r\n\r\nexport default PostPlaceholder;","import React, { Component } from 'react';\r\nimport {fetchPostFromServer, deletePost,unmountPost} from '../Actions/Actions';\r\nimport PostPlaceholder from '../Components/Placeholders/PostPlaceholder'\r\nimport {connect} from 'react-redux';\r\nimport {Helmet} from 'react-helmet';\r\nimport '../Styles/Post.css';\r\n\r\nclass Post extends Component {\r\n  render() {\r\n    const {deleteIndividualPost} = this.props;\r\n    const {\r\n      articleBody,\r\n      image,\r\n      imgPictureCredit,\r\n      publishDate,\r\n      source,\r\n      title,\r\n      _id\r\n    } = this.props.Post;\r\n    const Alias = this.props.match.params.id;\r\n    const deleteFunc=()=>{\r\n      deleteIndividualPost(Alias);\r\n      this.props.history.push(\"/\")\r\n    }\r\n    const goBack=()=>{\r\n      this.props.history.goBack()\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n      {Object.keys(this.props.Post).length>0?<div>\r\n        <Helmet>\r\n              <meta charSet=\"utf-8\" />\r\n              <title>{this.props.Post.title}</title>\r\n        </Helmet>\r\n        <button className=\"backButton\" onClick={()=>goBack()}>\r\n              Go Back\r\n        </button>\r\n        <div key={_id} className=\"openedPostBody\">\r\n          <h3 className=\"openedPostTitle\">{title}</h3>\r\n          <div className=\"postImageInfo\">\r\n            <img src={image} alt={title} className=\"openedPostImage\"/>\r\n            <p>Picture Credits:{imgPictureCredit}</p>\r\n          </div>\r\n          <p>Publish Date : {new Date(Number(publishDate)).toLocaleDateString()}</p>\r\n          <p>{articleBody}</p>\r\n          <strong><p>Source : {source}</p></strong>\r\n          <button type = \"delete\"\r\n          className = \"deleteButton\"\r\n          onClick = {() =>deleteFunc()}> \r\n            Delete This Post\r\n          </button>\r\n        </div>\r\n      </div>:<PostPlaceholder/>\r\n    }\r\n    </React.Fragment>\r\n    )\r\n  }\r\n  componentDidMount(){\r\n    const {dispatchPost} = this.props;\r\n    const id= this.props.match.params.id;\r\n    return dispatchPost(id);\r\n  }\r\n  componentWillUnmount(){\r\n    this.props.unmountPost()\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    Post: state.Post,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  dispatchPost: fetchPostFromServer,\r\n  deleteIndividualPost:deletePost,\r\n  unmountPost\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Post);","import React from 'react';\r\nimport '../App.css';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Header=()=>{\r\n    return (\r\n        <div>\r\n            <header>\r\n            <Link to=\"/\"><h4>Your Guide!</h4></Link>\r\n            <Link to=\"/addplace\"><button className=\"addPlaceButton\">Add New Place!</button></Link>\r\n          </header>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nimport {Helmet} from 'react-helmet';\r\nimport '../Styles/AddPlace.css';\r\n\r\nclass AddPlace extends Component {\r\n  render() {\r\n    return (\r\n      <div id=\"formBody\">\r\n        <Helmet>\r\n            <meta char=\"utf-8\"/>\r\n              <title>\r\n                Add New Place | mohitnegi.me\r\n              </title>\r\n        </Helmet>\r\n        <div className=\"Form\">\r\n          <form method=\"post\" action=\"/create\">\r\n            <input type=\"text\" name=\"title\" placeholder=\"Place Name\" required/>\r\n            <textarea className=\"textArea\"type=\"text\" name=\"articleBody\" placeholder=\"Place Description\" required/>\r\n            <input type=\"text\" name=\"source\" placeholder=\"Information Source\" required/>\r\n            <input type=\"text\" name=\"image\" placeholder=\"Image Link\" required/>\r\n            <input type=\"text\" name=\"credit\" placeholder=\"credit\"/>\r\n            <button type=\"submit\" value=\"Submit\" className=\"submitPlace\">Add Place</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AddPlace;","import React from 'react';\r\nimport '../Styles/NotFound.css';\r\n\r\nexport default function NotFound() {\r\n    return (\r\n        <div className=\"notFound\">\r\n            <div className=\"innerText\">\r\n                <div>\r\n                    <iframe title=\"notFound\" src=\"https://giphy.com/embed/xT0BKFyZt9MMx9xkpW\" frameBorder=\"0\" className=\"giphy-embed\"></iframe>\r\n                </div>\r\n                <h3>Sorry, Couldn't Found</h3>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react';\r\nimport Posts from './Components/Posts';\r\nimport Post from './Components/Post';\r\nimport Header from './Components/Header';\r\nimport AddPlace from './Components/AddPlace';\r\nimport Notfound from './Components/NotFound';\r\nimport {BrowserRouter,Route, Switch} from 'react-router-dom';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n         <BrowserRouter>\r\n          <Header/>\r\n          <div className=\"container\">\r\n                <Switch>\r\n                  <Route exact path=\"/\" component={Posts}/>\r\n                  <Route path=\"/article/:id\" component={Post}/>\r\n                  <Route path=\"/addplace\" component={AddPlace}/>\r\n                  <Route path=\"*\" component={Notfound}/>\r\n                </Switch>\r\n          </div>\r\n        </BrowserRouter>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default App;","import {FETCH_POSTS,FETCH_POST,DELETE_POST, POST_UNMOUNT,NO_POST_FOUND} from '../Actions/Types';\r\nconst DEFAULT_STATE={\r\n    Posts: [],\r\n    Post:{}\r\n};\r\nconst rootReducer=(state=DEFAULT_STATE, action)=>{\r\n    switch(action.type){\r\n        case FETCH_POSTS:\r\n            return{\r\n                ...state,\r\n                Posts:action.Posts\r\n            };\r\n        case FETCH_POST:\r\n            return {\r\n                ...state,\r\n                status:action.status,\r\n                Post: action.Post\r\n            }\r\n        case NO_POST_FOUND:\r\n            console.log(\"FETCH_POST \", action)\r\n            return {\r\n                ...state,\r\n                status:action.status,\r\n            }\r\n        case DELETE_POST:\r\n            console.log(\"Delete post \", action)\r\n            return{\r\n                ...state\r\n            }\r\n        case POST_UNMOUNT:\r\n        return{\r\n            ...state,\r\n            Post:action.Post\r\n        }\r\n        default: return state;\r\n    }   \r\n    \r\n};\r\n\r\nexport default rootReducer;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {createStore,applyMiddleware} from 'redux';\r\nimport {Provider} from 'react-redux';\r\nimport rootReducer from './Reducer/rootReducer';\r\nimport Thunk from 'redux-thunk';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(Thunk));\r\n\r\nReactDOM.render(<Provider store={store}><App/></Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}